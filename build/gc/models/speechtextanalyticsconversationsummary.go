package models
import (
    "time"
    "encoding/json"
    "strconv"
    "strings"
)

var (
    SpeechtextanalyticsconversationsummaryMarshalled = false
)

// This struct is here to use the useless readonly properties so that their required imports don't throw an unused error (time, etc.)
type SpeechtextanalyticsconversationsummaryDud struct { 
    


    


    


    


    


    

}

// Speechtextanalyticsconversationsummary
type Speechtextanalyticsconversationsummary struct { 
    // SummaryType - The type of summary
    SummaryType string `json:"summaryType"`


    // Language - Language of the summary
    Language string `json:"language"`


    // AgentId - The id of the agent associated with the summary
    AgentId string `json:"agentId"`


    // Summary - A summarization of the conversation transcription
    Summary string `json:"summary"`


    // Generated - Indicates whether or not the summary was generated by AI
    Generated bool `json:"generated"`


    // DateCreated - Timestamp of when the summary was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    DateCreated time.Time `json:"dateCreated"`

}

// String returns a JSON representation of the model
func (o *Speechtextanalyticsconversationsummary) String() string {
    
    
    
    
    
    

    j, _ := json.Marshal(o)
    str, _ := strconv.Unquote(strings.Replace(strconv.Quote(string(j)), `\\u`, `\u`, -1))

    return str
}

func (u *Speechtextanalyticsconversationsummary) MarshalJSON() ([]byte, error) {
    type Alias Speechtextanalyticsconversationsummary

    if SpeechtextanalyticsconversationsummaryMarshalled {
        return []byte("{}"), nil
    }
    SpeechtextanalyticsconversationsummaryMarshalled = true

    return json.Marshal(&struct {
        
        SummaryType string `json:"summaryType"`
        
        Language string `json:"language"`
        
        AgentId string `json:"agentId"`
        
        Summary string `json:"summary"`
        
        Generated bool `json:"generated"`
        
        DateCreated time.Time `json:"dateCreated"`
        *Alias
    }{

        


        


        


        


        


        

        Alias: (*Alias)(u),
    })
}

